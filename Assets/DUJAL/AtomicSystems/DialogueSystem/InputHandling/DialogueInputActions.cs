//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/DUJAL/AtomicSystems/DialogueSystem/InputHandling/DialogueInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @DialogueInputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @DialogueInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""DialogueInputActions"",
    ""maps"": [
        {
            ""name"": ""TextBoxActionMap"",
            ""id"": ""3a2d09a3-ad51-414c-a580-c29ef35e8b3c"",
            ""actions"": [
                {
                    ""name"": ""NextDialogue"",
                    ""type"": ""Button"",
                    ""id"": ""b1712f6f-276a-4baf-87e9-2327732c01a5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectChoice1"",
                    ""type"": ""Button"",
                    ""id"": ""4e40d69f-ce6e-477d-9f9b-d512b2f32443"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectChoice2"",
                    ""type"": ""Button"",
                    ""id"": ""ef309af2-61c4-446a-ab9d-4b0df26870d7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectChoice3"",
                    ""type"": ""Button"",
                    ""id"": ""e4c71ae4-8d93-4faf-bc30-d9b004496dcf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectChoice4"",
                    ""type"": ""Button"",
                    ""id"": ""fe995258-694d-4001-ada2-5a7cddb85cd8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""200981b8-0fe4-404b-a12f-1362712761bc"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""DefaultControlScheme"",
                    ""action"": ""NextDialogue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0742382a-8460-436b-b2a5-60af8fb3d6c9"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""DefaultControlScheme"",
                    ""action"": ""NextDialogue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a2888183-ce1f-42b3-9ad1-6e19068a7f05"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""DefaultControlScheme"",
                    ""action"": ""NextDialogue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ff98292a-7bc1-4b36-98a5-df7dde4c8c7b"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectChoice1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cfbd74b9-8a51-4e7d-ab55-aef4877ac2bc"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectChoice2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f5012721-fea6-45d1-af6e-5879f471b12b"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectChoice3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f48bfca4-9e17-43a3-bae6-dc14c57a13ec"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectChoice4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""DefaultControlScheme"",
            ""bindingGroup"": ""DefaultControlScheme"",
            ""devices"": []
        }
    ]
}");
        // TextBoxActionMap
        m_TextBoxActionMap = asset.FindActionMap("TextBoxActionMap", throwIfNotFound: true);
        m_TextBoxActionMap_NextDialogue = m_TextBoxActionMap.FindAction("NextDialogue", throwIfNotFound: true);
        m_TextBoxActionMap_SelectChoice1 = m_TextBoxActionMap.FindAction("SelectChoice1", throwIfNotFound: true);
        m_TextBoxActionMap_SelectChoice2 = m_TextBoxActionMap.FindAction("SelectChoice2", throwIfNotFound: true);
        m_TextBoxActionMap_SelectChoice3 = m_TextBoxActionMap.FindAction("SelectChoice3", throwIfNotFound: true);
        m_TextBoxActionMap_SelectChoice4 = m_TextBoxActionMap.FindAction("SelectChoice4", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // TextBoxActionMap
    private readonly InputActionMap m_TextBoxActionMap;
    private ITextBoxActionMapActions m_TextBoxActionMapActionsCallbackInterface;
    private readonly InputAction m_TextBoxActionMap_NextDialogue;
    private readonly InputAction m_TextBoxActionMap_SelectChoice1;
    private readonly InputAction m_TextBoxActionMap_SelectChoice2;
    private readonly InputAction m_TextBoxActionMap_SelectChoice3;
    private readonly InputAction m_TextBoxActionMap_SelectChoice4;
    public struct TextBoxActionMapActions
    {
        private @DialogueInputActions m_Wrapper;
        public TextBoxActionMapActions(@DialogueInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @NextDialogue => m_Wrapper.m_TextBoxActionMap_NextDialogue;
        public InputAction @SelectChoice1 => m_Wrapper.m_TextBoxActionMap_SelectChoice1;
        public InputAction @SelectChoice2 => m_Wrapper.m_TextBoxActionMap_SelectChoice2;
        public InputAction @SelectChoice3 => m_Wrapper.m_TextBoxActionMap_SelectChoice3;
        public InputAction @SelectChoice4 => m_Wrapper.m_TextBoxActionMap_SelectChoice4;
        public InputActionMap Get() { return m_Wrapper.m_TextBoxActionMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TextBoxActionMapActions set) { return set.Get(); }
        public void SetCallbacks(ITextBoxActionMapActions instance)
        {
            if (m_Wrapper.m_TextBoxActionMapActionsCallbackInterface != null)
            {
                @NextDialogue.started -= m_Wrapper.m_TextBoxActionMapActionsCallbackInterface.OnNextDialogue;
                @NextDialogue.performed -= m_Wrapper.m_TextBoxActionMapActionsCallbackInterface.OnNextDialogue;
                @NextDialogue.canceled -= m_Wrapper.m_TextBoxActionMapActionsCallbackInterface.OnNextDialogue;
                @SelectChoice1.started -= m_Wrapper.m_TextBoxActionMapActionsCallbackInterface.OnSelectChoice1;
                @SelectChoice1.performed -= m_Wrapper.m_TextBoxActionMapActionsCallbackInterface.OnSelectChoice1;
                @SelectChoice1.canceled -= m_Wrapper.m_TextBoxActionMapActionsCallbackInterface.OnSelectChoice1;
                @SelectChoice2.started -= m_Wrapper.m_TextBoxActionMapActionsCallbackInterface.OnSelectChoice2;
                @SelectChoice2.performed -= m_Wrapper.m_TextBoxActionMapActionsCallbackInterface.OnSelectChoice2;
                @SelectChoice2.canceled -= m_Wrapper.m_TextBoxActionMapActionsCallbackInterface.OnSelectChoice2;
                @SelectChoice3.started -= m_Wrapper.m_TextBoxActionMapActionsCallbackInterface.OnSelectChoice3;
                @SelectChoice3.performed -= m_Wrapper.m_TextBoxActionMapActionsCallbackInterface.OnSelectChoice3;
                @SelectChoice3.canceled -= m_Wrapper.m_TextBoxActionMapActionsCallbackInterface.OnSelectChoice3;
                @SelectChoice4.started -= m_Wrapper.m_TextBoxActionMapActionsCallbackInterface.OnSelectChoice4;
                @SelectChoice4.performed -= m_Wrapper.m_TextBoxActionMapActionsCallbackInterface.OnSelectChoice4;
                @SelectChoice4.canceled -= m_Wrapper.m_TextBoxActionMapActionsCallbackInterface.OnSelectChoice4;
            }
            m_Wrapper.m_TextBoxActionMapActionsCallbackInterface = instance;
            if (instance != null)
            {
                @NextDialogue.started += instance.OnNextDialogue;
                @NextDialogue.performed += instance.OnNextDialogue;
                @NextDialogue.canceled += instance.OnNextDialogue;
                @SelectChoice1.started += instance.OnSelectChoice1;
                @SelectChoice1.performed += instance.OnSelectChoice1;
                @SelectChoice1.canceled += instance.OnSelectChoice1;
                @SelectChoice2.started += instance.OnSelectChoice2;
                @SelectChoice2.performed += instance.OnSelectChoice2;
                @SelectChoice2.canceled += instance.OnSelectChoice2;
                @SelectChoice3.started += instance.OnSelectChoice3;
                @SelectChoice3.performed += instance.OnSelectChoice3;
                @SelectChoice3.canceled += instance.OnSelectChoice3;
                @SelectChoice4.started += instance.OnSelectChoice4;
                @SelectChoice4.performed += instance.OnSelectChoice4;
                @SelectChoice4.canceled += instance.OnSelectChoice4;
            }
        }
    }
    public TextBoxActionMapActions @TextBoxActionMap => new TextBoxActionMapActions(this);
    private int m_DefaultControlSchemeSchemeIdx = -1;
    public InputControlScheme DefaultControlSchemeScheme
    {
        get
        {
            if (m_DefaultControlSchemeSchemeIdx == -1) m_DefaultControlSchemeSchemeIdx = asset.FindControlSchemeIndex("DefaultControlScheme");
            return asset.controlSchemes[m_DefaultControlSchemeSchemeIdx];
        }
    }
    public interface ITextBoxActionMapActions
    {
        void OnNextDialogue(InputAction.CallbackContext context);
        void OnSelectChoice1(InputAction.CallbackContext context);
        void OnSelectChoice2(InputAction.CallbackContext context);
        void OnSelectChoice3(InputAction.CallbackContext context);
        void OnSelectChoice4(InputAction.CallbackContext context);
    }
}
